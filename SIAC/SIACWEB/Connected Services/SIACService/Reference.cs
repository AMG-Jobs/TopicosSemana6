//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIACWEB.SIACService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SIACService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TraeClientes", ReplyAction="http://tempuri.org/IService1/TraeClientesResponse")]
        SIACBibliotecaClases.CLIENTES[] TraeClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TraeClientes", ReplyAction="http://tempuri.org/IService1/TraeClientesResponse")]
        System.Threading.Tasks.Task<SIACBibliotecaClases.CLIENTES[]> TraeClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BuscarClientePorId", ReplyAction="http://tempuri.org/IService1/BuscarClientePorIdResponse")]
        SIACBibliotecaClases.CLIENTES BuscarClientePorId(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BuscarClientePorId", ReplyAction="http://tempuri.org/IService1/BuscarClientePorIdResponse")]
        System.Threading.Tasks.Task<SIACBibliotecaClases.CLIENTES> BuscarClientePorIdAsync(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CrearCliente", ReplyAction="http://tempuri.org/IService1/CrearClienteResponse")]
        SIACBibliotecaClases.CLIENTES CrearCliente(SIACBibliotecaClases.CLIENTES nuevoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CrearCliente", ReplyAction="http://tempuri.org/IService1/CrearClienteResponse")]
        System.Threading.Tasks.Task<SIACBibliotecaClases.CLIENTES> CrearClienteAsync(SIACBibliotecaClases.CLIENTES nuevoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditarCliente", ReplyAction="http://tempuri.org/IService1/EditarClienteResponse")]
        SIACBibliotecaClases.CLIENTES EditarCliente(SIACBibliotecaClases.CLIENTES clienteEditado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditarCliente", ReplyAction="http://tempuri.org/IService1/EditarClienteResponse")]
        System.Threading.Tasks.Task<SIACBibliotecaClases.CLIENTES> EditarClienteAsync(SIACBibliotecaClases.CLIENTES clienteEditado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarCliente", ReplyAction="http://tempuri.org/IService1/EliminarClienteResponse")]
        string EliminarCliente(int clienteEliminado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarCliente", ReplyAction="http://tempuri.org/IService1/EliminarClienteResponse")]
        System.Threading.Tasks.Task<string> EliminarClienteAsync(int clienteEliminado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SIACWEB.SIACService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SIACWEB.SIACService.IService1>, SIACWEB.SIACService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SIACBibliotecaClases.CLIENTES[] TraeClientes() {
            return base.Channel.TraeClientes();
        }
        
        public System.Threading.Tasks.Task<SIACBibliotecaClases.CLIENTES[]> TraeClientesAsync() {
            return base.Channel.TraeClientesAsync();
        }
        
        public SIACBibliotecaClases.CLIENTES BuscarClientePorId(int idCliente) {
            return base.Channel.BuscarClientePorId(idCliente);
        }
        
        public System.Threading.Tasks.Task<SIACBibliotecaClases.CLIENTES> BuscarClientePorIdAsync(int idCliente) {
            return base.Channel.BuscarClientePorIdAsync(idCliente);
        }
        
        public SIACBibliotecaClases.CLIENTES CrearCliente(SIACBibliotecaClases.CLIENTES nuevoCliente) {
            return base.Channel.CrearCliente(nuevoCliente);
        }
        
        public System.Threading.Tasks.Task<SIACBibliotecaClases.CLIENTES> CrearClienteAsync(SIACBibliotecaClases.CLIENTES nuevoCliente) {
            return base.Channel.CrearClienteAsync(nuevoCliente);
        }
        
        public SIACBibliotecaClases.CLIENTES EditarCliente(SIACBibliotecaClases.CLIENTES clienteEditado) {
            return base.Channel.EditarCliente(clienteEditado);
        }
        
        public System.Threading.Tasks.Task<SIACBibliotecaClases.CLIENTES> EditarClienteAsync(SIACBibliotecaClases.CLIENTES clienteEditado) {
            return base.Channel.EditarClienteAsync(clienteEditado);
        }
        
        public string EliminarCliente(int clienteEliminado) {
            return base.Channel.EliminarCliente(clienteEliminado);
        }
        
        public System.Threading.Tasks.Task<string> EliminarClienteAsync(int clienteEliminado) {
            return base.Channel.EliminarClienteAsync(clienteEliminado);
        }
    }
}
